language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test:unit
- npm run test:integration
after_success:
- openssl aes-256-cbc -K $encrypted_eca2051faa16_key -iv $encrypted_eca2051faa16_iv
  -in deployment_keys.tar.enc -out deployment_keys.tar -d
- cd ..
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: cZRqdmCyi/aGacn/0fCiAaupkTDRRXNeU6H/tLmoo5jX1ZgzksgI8a/7H5iddO6fPpl882y0FubEjMKOaEwHZ+HqIt+O7c0SVnrTS1E2gsDKs+anooAfifhRFgxXJYvDwtiS6SweuQ9UKElRaxP+rBW9R30qcSZxyDf4qkbMd5S0HtujJs1rXEFd4CJ57mcBTL0kwYz1n3oig3etT6hUoJo+0yoA1xWCLVdAUZMZZFNJNDMZyOoPKX09bA48Q+RGNRbmh0M6LByAHDpgrirGVB44Pru60mPi9h1jxbwLZfbqXky/FhOMuH5bLKI+I5wfnzfELv69i7PS4OXJXvpj1c673AidsYZbRHrhYKzY7MGoDT5poORKZvBv0FnuVbkadap59moCUEZ3TshDFEuXoAPWi1Kxc3yb6FE4IQQLfE5j+tF5qTKNNiHSbVr5a4tqhriLwer8AlLXA2yFY/nb4+IqjZVHvqyTMSdC0MOsh96zFekWFe2ULpOk40TyXM4pFWXKaMnm7HSzymVkF0vDiJonkIjU2LdCsacn2FAJVR9QV2SbqdwKlNYfauuvM8Fdw8fluvP5ANdJVcLJiJ5l1RBaka29qoaBNEJwG6vqrrxF345iKjgBTCn66iWFim/eVDIE9ZDop7UK4APfKutKypJKTt1CcskJJEFAdOkQUFY=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: gGVTBDBHErXrQAD2eztpcfijnSJXIkOQObfG6YNDEmlxwoeXZALXU085NrPX6S3WR+BpquON4jOUQseIXywFhlUIpfIFCwEwHCwsKhPccWUJqq+8CelWzodyGco45NayEdQvrmz7XMXA+MT+qlsIppb+DJVem7EGfL+xr+wsKsv7ULrUQf7cIHDON7CrHXtPozMwi+mVOdgwUCMWdgUSt5u2vWf27Wm5+4nfqz90DAEs1x/RjmT+X0tKOi56lnH4NR/u9/z60k7xFmZf6n2X3UKM71w63n9CLc3shgYTusmSsTQN81umlCoC98lScvxCDlRSD0bUreHkL8DYKBnrJSULx+JGh59o/5XehgYVo+h4IGA3aMiWK/MWPCYXCIHLUX7yLYEvEt3appEH2f7k1lg/04MeL2D9FATqSruqP8nTV9Qp+LtNWyoK1yKH0YP8o1CBFYbAVBAmTa1mIs4ya5/Kz1uB7Ndddic9Q54Xbpu4pHhojAj7BhHtg+MIWTtUda0u0WKmtT3hvexShBl4epex/F3EUGkEMvi3gvKehCxcZOMEy4DTBcoWqbiSFISKvILyjBFuhaYtZC2XNhjR3RMLlcC0d3gV7R+XLLIIyv3sSto6nrQkVBHkdc9LTT4US5F1RPNH8qMGGqI+F0Muir31wSF1ByvFJSkNNcJxfF4=
  - secure: DaPV9Qqc7s1g2T7lOlaHr8CxIKxOT+GQ5ON7uUyqOyhhNxpNbmNTEZu0O/o56WMaOnTVcAFmCUiMux/D/sdZpi96Q+Mu6ZlJFZ/OemkNwLdK2mMSu/10kVtF4jxOV52gbksn1sJ7ZC/PmoCwSniYvYkoiFYOEJMRmKc3L+YFHIEUcjzu8smuTT/l0vgsrdPKvhjBs2vpr7Pt518HwjTeQUCp3JzJWcQ6Dz2ftsFCMwnBkRXVMedgW0H/DkQLSjmNwszsmN7NWqQOona2g/yFqE/rWqi4Wa9t3DsrkN3CdS236MrvdYgeCcEwlC/qXJTfEAc3dyzmI0fao0akoeolC2vbqhD886YaB5KU1GOPKr8OzqErzG3lFu51e2bd7f15MffmxXrS5p6DlCWdeoYL5JBw+9tyY640BedvqYLENMVxyAfowxz3/rnySg88kmU/sQsLmhk3p+WjggM2jCTyUyJLCYzFOjrr+Kydu07CscJojWS9gMbQiH4Jm77tNnYjTnrK9fBkdNpcPzeael+LOSsboCEwXhMPZS8bt9dDKwPuA8IVWrllig/FOnLi4MaZQsMtGsh6rZzVN06bDrmRtNdfw9YgiQZowfpZrFa1UY9g4X6JDF9bmaDEa35aQOlrq05+ACXtCvsBgnqRos7beQg8zXOX8h+lu5uDWB9YMQI=
  - secure: X6RqiUel3EXO87XgDfBMP3z/t5fuqxn12TiybC0PDIhbIAVoxPKkkPrJeMTZKxQOMvia6OfufaVGymE9iAQXrp5fKU6FQYn4Aw8zlXHzHyanBtQVPxCzQ/jg1PXSt6ZpzzpPpSKCSyySEg6i9KeabJsmpzyvMSAu37WxU/ho7aXWqdeCzT9b2irQJwAoZ5FfSqcrqJ52NzZ0cLCzFwLfon1MUcnuLYyw8Se9077UDY8M5qqLEOtuEE+GGzQObl9xhjmGk7hVcpob8ZHNL+vTf5BbGewAs8lIVDL+Tsn5SfHN189CS0LBb5/QiGbUFlq4pyvcJiOW2xc6cOjNs1lJcIwaQ9jZGPtCqL0k08nFVQufZ/W1t/d34PrzJErnfe3qCUN9OHw/tKs1HC+98Z5I5w8QY8nw8CsRgpuAqqPRXuXA4v4lHqiizjQqWa7Nl47p8+jtvaYrivX7iCWr2lh6DxYePelSsRl6eoh5XDi7dM51eBacUAo4WSDnm+KT2FHC0mwdSq0X2nASW292wfnHlQYfb8qkvTfO7LWoFlXTbHJaqLp12qZP01i4px6/P41Ijni7DqA0N676hUJ//ZrzsYzn3+m8vhpddu5OeWCLJa021wchvHRxxyAmWIydG5Wd8OeJ7Up2lUA1oFs78f8t/Eh77bE1la1p69zkyyAUM6Q=
